// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: withAmazon.proto

package edu.duke.erss.proto.UPStoAmazon;

public interface UACommandsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tutorial.UACommands)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .tutorial.AmazonPick pick = 1;</code>
   */
  java.util.List<edu.duke.erss.proto.UPStoAmazon.AmazonPick> 
      getPickList();
  /**
   * <code>repeated .tutorial.AmazonPick pick = 1;</code>
   */
  edu.duke.erss.proto.UPStoAmazon.AmazonPick getPick(int index);
  /**
   * <code>repeated .tutorial.AmazonPick pick = 1;</code>
   */
  int getPickCount();
  /**
   * <code>repeated .tutorial.AmazonPick pick = 1;</code>
   */
  java.util.List<? extends edu.duke.erss.proto.UPStoAmazon.AmazonPickOrBuilder> 
      getPickOrBuilderList();
  /**
   * <code>repeated .tutorial.AmazonPick pick = 1;</code>
   */
  edu.duke.erss.proto.UPStoAmazon.AmazonPickOrBuilder getPickOrBuilder(
      int index);

  /**
   * <code>repeated .tutorial.AmazonLoaded load = 2;</code>
   */
  java.util.List<edu.duke.erss.proto.UPStoAmazon.AmazonLoaded> 
      getLoadList();
  /**
   * <code>repeated .tutorial.AmazonLoaded load = 2;</code>
   */
  edu.duke.erss.proto.UPStoAmazon.AmazonLoaded getLoad(int index);
  /**
   * <code>repeated .tutorial.AmazonLoaded load = 2;</code>
   */
  int getLoadCount();
  /**
   * <code>repeated .tutorial.AmazonLoaded load = 2;</code>
   */
  java.util.List<? extends edu.duke.erss.proto.UPStoAmazon.AmazonLoadedOrBuilder> 
      getLoadOrBuilderList();
  /**
   * <code>repeated .tutorial.AmazonLoaded load = 2;</code>
   */
  edu.duke.erss.proto.UPStoAmazon.AmazonLoadedOrBuilder getLoadOrBuilder(
      int index);

  /**
   * <code>repeated int64 acks = 3;</code>
   * @return A list containing the acks.
   */
  java.util.List<java.lang.Long> getAcksList();
  /**
   * <code>repeated int64 acks = 3;</code>
   * @return The count of acks.
   */
  int getAcksCount();
  /**
   * <code>repeated int64 acks = 3;</code>
   * @param index The index of the element to return.
   * @return The acks at the given index.
   */
  long getAcks(int index);
}
